/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package pl.polsl.api;

import pl.polsl.model.Checklist;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "checklists", description = "the checklists API")
public interface ChecklistsApi {

    ChecklistsApiDelegate getDelegate();

    @ApiOperation(value = "Creates a new checklist", nickname = "createChecklist", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Checklist succesfully created."),
        @ApiResponse(code = 400, message = "Checklist couldn't have been created."),
        @ApiResponse(code = 500, message = "An unexpected error occured.", response = Object.class) })
    @RequestMapping(value = "/checklists",
        method = RequestMethod.POST)
    default ResponseEntity<Void> createChecklist(@ApiParam(value = "checklist to create"  )  @Valid @RequestBody Checklist checklist) {
        return getDelegate().createChecklist(checklist);
    }


    @ApiOperation(value = "Deletes a checklist", nickname = "deleteChecklist", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Checklist succesfully deleted."),
        @ApiResponse(code = 400, message = "Checklist couldn't have been deleted."),
        @ApiResponse(code = 500, message = "An unexpected error occured.", response = Object.class) })
    @RequestMapping(value = "/checklists/{id}",
        method = RequestMethod.DELETE)
    default ResponseEntity<Void> deleteChecklist(@ApiParam(value = "Id of checklist to delete",required=true) @PathVariable("id") String id) {
        return getDelegate().deleteChecklist(id);
    }


    @ApiOperation(value = "Get all checklists", nickname = "getChecklists", notes = "Return list of checklists", response = Checklist.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "List of checklists", response = Checklist.class, responseContainer = "List"),
        @ApiResponse(code = 500, message = "An unexpected error occured.", response = Object.class) })
    @RequestMapping(value = "/checklists",
        method = RequestMethod.GET)
    default ResponseEntity<List<Checklist>> getChecklists(@ApiParam(value = "") @Valid @RequestParam(value = "creator", required = false) String creator,@ApiParam(value = "") @Valid @RequestParam(value = "recipent", required = false) String recipent) {
        return getDelegate().getChecklists(creator, recipent);
    }


    @ApiOperation(value = "Modifies a checklist", nickname = "modifyChecklist", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Checklist succesfully modified."),
        @ApiResponse(code = 400, message = "Checklist couldn't have been modified."),
        @ApiResponse(code = 500, message = "An unexpected error occured.", response = Object.class) })
    @RequestMapping(value = "/checklists/{id}",
        method = RequestMethod.PATCH)
    default ResponseEntity<Void> modifyChecklist(@ApiParam(value = "Id of checklist to delete",required=true) @PathVariable("id") String id,@ApiParam(value = "Modified checklist"  )  @Valid @RequestBody Checklist checklist) {
        return getDelegate().modifyChecklist(id, checklist);
    }

}
