/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package pl.polsl.api;

import pl.polsl.model.CalendarEvent;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "calendar", description = "the calendar API")
public interface CalendarApi {

    CalendarApiDelegate getDelegate();

    @ApiOperation(value = "Deletes a calendar event", nickname = "deleteCalendarEvent", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Event succesfully deleted."),
        @ApiResponse(code = 400, message = "Event couldn't have been deleted."),
        @ApiResponse(code = 500, message = "An unexpected error occured.", response = Object.class) })
    @RequestMapping(value = "/calendar/{id}",
        method = RequestMethod.DELETE)
    default ResponseEntity<Void> deleteCalendarEvent(@ApiParam(value = "Id of event to delete",required=true) @PathVariable("id") String id) {
        return getDelegate().deleteCalendarEvent(id);
    }


    @ApiOperation(value = "Gets all calendar events for given household", nickname = "getCalendarEvents", notes = "Returns all calendar events for given household", response = CalendarEvent.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "List of calendar events", response = CalendarEvent.class, responseContainer = "List"),
        @ApiResponse(code = 500, message = "An unexpected error occured.", response = Object.class) })
    @RequestMapping(value = "/calendar/{householdId}",
        method = RequestMethod.GET)
    default ResponseEntity<List<CalendarEvent>> getCalendarEvents(@ApiParam(value = "",required=true) @PathVariable("householdId") String householdId) {
        return getDelegate().getCalendarEvents(householdId);
    }


    @ApiOperation(value = "Creates a calendar event or patches if it already exists", nickname = "saveCalendarEvent", notes = "", response = String.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Event succesfully saved.", response = String.class),
        @ApiResponse(code = 400, message = "Event couldn't have been saved."),
        @ApiResponse(code = 500, message = "An unexpected error occured.", response = Object.class) })
    @RequestMapping(value = "/calendar/{householdId}",
        method = RequestMethod.POST)
    default ResponseEntity<String> saveCalendarEvent(@ApiParam(value = "",required=true) @PathVariable("householdId") String householdId,@ApiParam(value = "Event to save"  )  @Valid @RequestBody CalendarEvent event) {
        return getDelegate().saveCalendarEvent(householdId, event);
    }

}
