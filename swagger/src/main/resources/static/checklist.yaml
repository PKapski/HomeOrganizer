swagger: "2.0"
info:
  version: 1.0.0
  title: Checklist API

schemes:
  - http
basePath:
  $ref: 'commons.yaml#/basePath'

securityDefinitions:
  $ref: 'commons.yaml#/securityDefinitions'

consumes:
  $ref: 'commons.yaml#/consumes'
produces:
  $ref: 'commons.yaml#/produces'


paths:
  /checklists:
    get:
      summary: Get all checklists
      operationId: getChecklists
      description: Return list of checklists
      parameters:
        - name: username
          in: query
          type: string
        - name: householdId
          in: query
          type: string
        - name: sortingDirection
          in: query
          type: string
          enum:
            - ASC
            - DESC
        - name: sortedField
          in: query
          type: string
        - $ref: 'commons.yaml#/parameters/firstResult'
        - $ref: 'commons.yaml#/parameters/maxResult'
      responses:
        200:
          description: List of checklists with paging
          schema:
            $ref: '#/definitions/ChecklistsPaging'
        500:
          $ref: 'commons.yaml#/responses/Standard500ErrorResponse'

    post:
      summary: Creates or modifies checklist if it already exists
      operationId: saveChecklist
      parameters:
        - name: checklist
          in: body
          description: checklist to save
          schema:
            $ref: '#/definitions/Checklist'
      responses:
        201:
          description: Checklist succesfully created.
          schema:
            type: string
        400:
          description: Checklist couldn't have been saved.
        500:
          $ref: 'commons.yaml#/responses/Standard500ErrorResponse'

  /checklists/{id}:
    delete:
      summary: Deletes a checklist
      operationId: deleteChecklist
      parameters:
        - name: id
          in: path
          description: Id of checklist to delete
          type: string
          required: true
      responses:
        204:
          description: Checklist succesfully deleted.
        400:
          description: Checklist couldn't have been deleted.
        500:
          $ref: 'commons.yaml#/responses/Standard500ErrorResponse'

definitions:
  Checklist:
    required:
      - itemList
    properties:
      id:
        description: Checklist Id providing uniqueness in database
        type: string
        readOnly: true
      title:
        description: Checklist tile
        type: string
        default: ""
      itemList:
        description: List of items added to the checklist
        type: array
        items:
          $ref: '#/definitions/ChecklistItem'
      recipent:
        description: Username of a person that the checklist is intender for, null means that it is to everyone
        type: string
      creator:
        description: Username of a person that created the checklist
        type: string
      householdId:
        description: Household id that the checklist is written to
        type: string
        default: "testHousehold"
      creationDate:
        description: Date when the checklist was created
        type: string
        format: date
      expirationDate:
        description: Expiration date of a checklist
        type: string
        format: date
      visibleToEveryone:
        description: Describes if note can be seen by anyone in household
        type: boolean
        default: true


  ChecklistItem:
    required:
      - message
      - isChecked
    properties:
      message:
        description: Certain checklist item message
        type: string
      isChecked:
        description: Describes if item is done or not
        type: boolean
        default: false

  ChecklistsPaging:
    properties:
      array:
        type: array
        items:
          $ref: '#/definitions/Checklist'
      maxItems:
        type: integer
